
main.o:     file format elf32-avr
main.o
architecture: avr:5, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000

Program Header:
    LOAD off    0x00000074 vaddr 0x00000000 paddr 0x00000000 align 2**1
         filesz 0x000000ac memsz 0x000000ac flags r-x
    LOAD off    0x00000120 vaddr 0x00800060 paddr 0x000000ac align 2**0
         filesz 0x00000000 memsz 0x00000000 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ac  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000000ac  00000120  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000011  00000000  00000000  00000120  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000134  2**2
                  CONTENTS, READONLY
  4 .debug_info   000004e6  00000000  00000000  00000170  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000004a3  00000000  00000000  00000656  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000001a  00000000  00000000  00000af9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000196  00000000  00000000  00000b13  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00800060 l    d  .data	00000000 .data
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .note.gnu.avr.deviceinfo	00000000 .note.gnu.avr.deviceinfo
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    df *ABS*	00000000 main.c
0000003e l       *ABS*	00000000 __SP_H__
0000003d l       *ABS*	00000000 __SP_L__
0000003f l       *ABS*	00000000 __SREG__
00000000 l       *ABS*	00000000 __tmp_reg__
00000001 l       *ABS*	00000000 __zero_reg__
00000000 l    df *ABS*	00000000 _exit.o
000000aa l       .text	00000000 __stop_program
0000006c g     F .text	00000024 __vector_1
0000ffa0 g       *ABS*	00000000 __DATA_REGION_LENGTH__
00000000 g       *ABS*	00000000 __TEXT_REGION_ORIGIN__
00000054 g       .text	00000000 __trampolines_start
000000ac g       .text	00000000 _etext
00000068  w      .text	00000000 __vector_12
00000068 g       .text	00000000 __bad_interrupt
000000ac g       *ABS*	00000000 __data_load_end
00000068  w      .text	00000000 __vector_6
00000054 g       .text	00000000 __trampolines_end
00000068  w      .text	00000000 __vector_3
000000ac g       *ABS*	00000000 __data_load_start
00000054 g       .text	00000000 __dtors_end
00000400 g       *ABS*	00000000 __LOCK_REGION_LENGTH__
00000068  w      .text	00000000 __vector_11
00000054  w      .text	00000000 __init
00000068  w      .text	00000000 __vector_13
00000068  w      .text	00000000 __vector_17
00000068  w      .text	00000000 __vector_19
00000068  w      .text	00000000 __vector_7
00810000 g       .data	00000000 __eeprom_end
00000000 g       .text	00000000 __vectors
00000000  w      .text	00000000 __vector_default
00000068  w      .text	00000000 __vector_5
00000400 g       *ABS*	00000000 __SIGNATURE_REGION_LENGTH__
00000054 g       .text	00000000 __ctors_start
00000090 g     F .text	00000018 main
00000068  w      .text	00000000 __vector_4
00800060 g       *ABS*	00000000 __DATA_REGION_ORIGIN__
00000000  w      *ABS*	00000000 __heap_end
00000068  w      .text	00000000 __vector_9
00000068  w      .text	00000000 __vector_2
00000400 g       *ABS*	00000000 __USER_SIGNATURE_REGION_LENGTH__
00000068  w      .text	00000000 __vector_15
00000054 g       .text	00000000 __dtors_start
00000054 g       .text	00000000 __ctors_end
0000085f  w      *ABS*	00000000 __stack
00800060 g       .data	00000000 _edata
00800060 g       .data	00000000 _end
00000068  w      .text	00000000 __vector_8
000000a8  w      .text	00000000 .hidden exit
00010000 g       *ABS*	00000000 __EEPROM_REGION_LENGTH__
000000a8 g       .text	00000000 .hidden _exit
00000068  w      .text	00000000 __vector_14
00000068  w      .text	00000000 __vector_10
00000068  w      .text	00000000 __vector_16
00000068  w      .text	00000000 __vector_18
00000002 g       *ABS*	00000000 __FUSE_REGION_LENGTH__
00020000 g       *ABS*	00000000 __TEXT_REGION_LENGTH__
00000068  w      .text	00000000 __vector_20


